# define colors
red = "\033[31m"
green = "\033[32m"
yellow = "\033[33m"
blue = "\033[34m"
orange = "\033[38;5;214m" 
reset = "\033[0m" 

class Stack:
    def __init__(self):
        self.items = []

    def push(self, item):
        """Add an item to the stack if it doesn't already exist."""
        if item in self.items:
            print("This ring is already in the stack. You cannot add it again.")
        else:
            self.items.append(item)

    def pop(self):
        """Remove and return the top item from the stack."""
        if not self.is_empty():
            return self.items.pop()
        return None

    def is_empty(self):
        """Check if the stack is empty."""
        return len(self.items) == 0

    def display(self):
        """Display the stack."""
        print("Stacking Toy (top to bottom):")
        for item in reversed(self.items):  # Reverse the order of items
            print(item)
        print()  # Add a blank line for readability


# defines the rings with colors
rings = {
    "r": f"""{red}         
         _____________
        |             |
        |_____________|
{reset}""",
    "o": f"""{orange}         
       ________________
      |                |
      |________________|
{reset}""",
    "y": f"""{yellow}         
     ____________________
    |                    |
    |____________________|
{reset}""",
    "g": f"""{green}         
   ________________________
  |                        |
  |________________________|
{reset}""",
    "b": f"""{blue}         
 ____________________________
|                            |
|____________________________|
{reset}"""
}

# create a stacking toy
stacking_toy = Stack()

# loop to get user input
while True:
    print("\nWhat would you like to do?")
    print("Type the first letter of the color to add a ring (r, o, y, g, b).")
    print("Type 'remove' to remove the top ring.")
    print("Type 'exit' to quit.")
    
    # display the current stacking toy
    stacking_toy.display()
    
    # get user input
    command = input("\nEnter a command: ").lower()

    if command in rings:
        stacking_toy.push(rings[command])
        print(f"{command.upper()} ring added!")
    elif command == "remove":
        if not stacking_toy.is_empty():
            removed_ring = stacking_toy.pop()
            print("Removed the top ring:")
            print(removed_ring)
        else:
            print("The stack is empty. No ring to remove.")
    elif command == "exit":
        print("Exiting. Goodbye!")
        break
    else:
        print("Invalid command. Please type a valid color (r, o, y, g, b), 'remove', or 'exit'.")
